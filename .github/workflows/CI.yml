name: ci

on:
  push: {}
  pull_request:
    types:
      - opened
      - edited
      - synchronize
  workflow_dispatch: {}

jobs:
  build:
    name: Build Go Binaries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Get frontend ref hash
        id: frontend-ref
        run: echo "::set-output name=commit::$(git submodule status | cut -f 2 -d ' ')"

      - name: Cache frontend builds
        id: cache-frontend-builds
        uses: actions/cache@v2
        with:
          path: gypsum/web
          key: gypsum-web-builds-precompressed-${{ steps.frontend-ref.outputs.commit }}

      - name: Setup Nodejs
        if: steps.cache-frontend-builds.outputs.cache-hit != 'true'
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Get yarn cache directory path
        if: steps.cache-frontend-builds.outputs.cache-hit != 'true'
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v2
        if: steps.cache-frontend-builds.outputs.cache-hit != 'true'
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build frontend
        if: steps.cache-frontend-builds.outputs.cache-hit != 'true'
        run: |
          cd frontend
          yarn install
          yarn build --dest ../gypsum/web
          gzip -rk9 ../gypsum/web

      - name: Setup go
        uses: actions/setup-go@v2
        with:
          stable: false
          go-version: 1.16.0-rc1

      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('./go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build binaries
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: build --snapshot --rm-dist

      - name: Login to Docker Hub
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.goos }}_${{ matrix.goarch }}
          path: |
            dist/*.tar.gz
            dist/*.zip

      - name: Backup binaries
        uses: docker://rclone/rclone:1
        with:
          args: >-
            copy dist remote:pan/gypsum/ci/${{ github.run_number }}/
            --config scripts/rclone.conf
            --include "/*.tar.gz"
            --include "/*.zip"
        env:
          RCLONE_CONFIG_PASS: ${{ secrets.RCLONE_CONFIG_PASS }}
